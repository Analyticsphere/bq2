/* 
 Query name:  BQ2.module1
 Destination: BQ2.module1 (view)
 Authors:     Jake
 Objective:   Let's work towards merging module1_v1 and module2_v2, breaking each problem in to a small query.
 */
------------------------------------
-- [QUERY 1] Columns unique to v1 --
------------------------------------
DECLARE v1_unique_cols ARRAY < STRING > DEFAULT (
        SELECT ARRAY_AGG(column_name) AS v1_unique_cols
        FROM FlatConnect.INFORMATION_SCHEMA.COLUMNS
        WHERE table_name = 'module1_v1_JP'
            AND column_name NOT IN (
                SELECT column_name
                FROM FlatConnect.INFORMATION_SCHEMA.COLUMNS
                WHERE table_name = 'module1_v2_JP'
            )
    );


------------------------------------
-- [QUERY 2] Columns unique to v2 --
------------------------------------
DECLARE v2_unique_cols ARRAY < STRING > DEFAULT (
        SELECT ARRAY_AGG(column_name) AS v2_unique_column
        FROM FlatConnect.INFORMATION_SCHEMA.COLUMNS
        WHERE table_name = 'module1_v2_JP'
            AND column_name NOT IN (
                SELECT column_name
                FROM FlatConnect.INFORMATION_SCHEMA.COLUMNS
                WHERE table_name = 'module1_v1_JP'
            )
    );


-------------------------------------------
-- [QUERY 3] Columns common to v1 and v2 --
-------------------------------------------
DECLARE common_cols ARRAY < STRING > DEFAULT (
        SELECT ARRAY_AGG(column_name) AS common_columns
        FROM FlatConnect.INFORMATION_SCHEMA.COLUMNS
        WHERE table_name = 'module1_v1_JP'
            AND column_name IN (
                SELECT column_name
                FROM FlatConnect.INFORMATION_SCHEMA.COLUMNS
                WHERE table_name = 'module1_v2_JP'
            )
    );


--------------------------------------------------
-- [QUERY 4] Participants who completed v1 only --
--------------------------------------------------
DECLARE participants_v1_only ARRAY < STRING > DEFAULT (
        SELECT ARRAY_AGG(DISTINCT Connect_ID)
        FROM FlatConnect.module1_v1_JP
        WHERE Connect_ID NOT IN (
                SELECT DISTINCT Connect_ID
                FROM FlatConnect.module1_v2_JP
            )
    );


--------------------------------------------------
-- [QUERY 5] Participants who completed v2 only --
--------------------------------------------------
DECLARE participants_v2_only ARRAY < STRING > DEFAULT (
        SELECT ARRAY_AGG(DISTINCT Connect_ID)
        FROM FlatConnect.module1_v2_JP
        WHERE Connect_ID NOT IN (
                SELECT DISTINCT Connect_ID
                FROM FlatConnect.module1_v1_JP
            )
    );


---------------------------------------------------------
-- [QUERY 6] Participants who completed both v1 and v2 --
---------------------------------------------------------
DECLARE participants_both ARRAY < STRING > DEFAULT (
        SELECT ARRAY_AGG(DISTINCT Connect_ID)
        FROM FlatConnect.module1_v1_JP
        WHERE Connect_ID IN (
                SELECT DISTINCT Connect_ID
                FROM FlatConnect.module1_v2_JP
            )
    );


-------------------------------------------------------------------------
--[QUERY 7] Get both versions of Recruitment data for Module 1 from BQ --
-------------------------------------------------------------------------
SELECT token,
    Connect_ID,
    d_821247024,
    --Indicator of match verification after creation of user profile - updated by sites
    d_914594314,
    --Autogenerated date/time verification status is updated
    d_827220437,
    --Healthcare provider
    d_512820379,
    --Autogenerated flag - Recruitment type
    d_949302066,
    --Flag for Baseline Module Background and Overall Health SrvBOH_BaseStatus_v1r0
    d_517311251,
    --Date/time Status of Completion of Background and Overall Health SrvBOH_TmComplete_v1r0
    d_205553981 --Autogenerated date/time stamp for Start of Module Background and Overall Health
FROM FlatConnect.participants_JP
WHERE Connect_ID IS NOT NULL
    AND d_821247024 = '197316935' -- Verif Status [821247024] is Verified [197316935]
    AND d_831041022 = '104430631' -- Destroy data [831041022] is No [104430631]
;


----------------------------------------------------------------------------------------
-- [QUERY 8] Create a new table that combines v1 and v2 with the specified conditions---
----------------------------------------------------------------------------------------
WITH v1_exclusive AS (
    SELECT t1.*,
        'v1' AS version
    FROM FlatConnect.module1_v1_JP AS t1
        LEFT JOIN FlatConnect.module1_v2_JP AS t2 ON t1.Connect_ID = t2.Connect_ID
    WHERE t1.Connect_ID IN UNNEST (participants_v1_only)
),
v2_inclusive AS (
    SELECT t2.*,
        'v2' AS version
    FROM FlatConnect.module1_v2_JP AS t2
        LEFT JOIN FlatConnect.module1_v1_JP AS t1 ON t2.Connect_ID = t1.Connect_ID
    WHERE t1.Connect_ID NOT IN UNNEST (participants_v1_only)
)
SELECT *
FROM v1_exclusive
    FULL OUTER JOIN v2_inclusive ON v1_exclusive.Connect_ID = v2_inclusive.Connect_ID;


----------------------------------------------------------------------------------------
-- [QUERY 9] Get the  number of common columns ---
----------------------------------------------------------------------------------------   
-- List columns in the first table
WITH v1_columns AS (
    SELECT column_name
    FROM FlatConnect.INFORMATION_SCHEMA.COLUMNS
    WHERE table_name = 'module1_v1_JP'
),
-- List columns in the second table
v2_columns AS (
    SELECT column_name
    FROM FlatConnect.INFORMATION_SCHEMA.COLUMNS
    WHERE table_name = 'module1_v2_JP'
) -- Count the number of common columns
SELECT COUNT(*) AS common_column_count
FROM v1_columns
WHERE column_name IN (
        SELECT column_name
        FROM v2_columns
    );